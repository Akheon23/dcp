/*
** Generated by X-Designer
*/
/*
**LIBS: -lXm -lXt -lX11
*/

#include <X11/Xatom.h>
#include <X11/Intrinsic.h>
#include <X11/Shell.h>

#include <Xm/Xm.h>
#include <Xm/DialogS.h>
#include <Xm/Form.h>
#include <Xm/Label.h>
#include <Xm/PushB.h>
#include <Xm/RowColumn.h>
#include <Xm/Text.h>


extern void digit_callback() ;
extern void decimal_point() ;
extern void Equals() ;
extern void Add() ;
extern void Subtract() ;
extern void Multiply() ;
extern void Divide() ;
extern void ChangeSign() ;
extern void MemRecall() ;
extern void ClearAll() ;
extern void MemAdd() ;
extern void ClearEntry() ;
extern void MemSubtract() ;
Widget calc_shell = (Widget) NULL;
Widget calc_form = (Widget) NULL;
Widget digits_rc = (Widget) NULL;
Widget digit7 = (Widget) NULL;
Widget digit4 = (Widget) NULL;
Widget digit1 = (Widget) NULL;
Widget dec_point = (Widget) NULL;
Widget digit8 = (Widget) NULL;
Widget digit5 = (Widget) NULL;
Widget digit2 = (Widget) NULL;
Widget digit0 = (Widget) NULL;
Widget digit9 = (Widget) NULL;
Widget digit6 = (Widget) NULL;
Widget digit3 = (Widget) NULL;
Widget eq_b = (Widget) NULL;
Widget add_b = (Widget) NULL;
Widget sub_b = (Widget) NULL;
Widget mul_b = (Widget) NULL;
Widget div_b = (Widget) NULL;
Widget calc_display = (Widget) NULL;
Widget unary_rc = (Widget) NULL;
Widget sgn_b = (Widget) NULL;
Widget m_b = (Widget) NULL;
Widget ac_b = (Widget) NULL;
Widget mplus_b = (Widget) NULL;
Widget ce_b = (Widget) NULL;
Widget mminus_b = (Widget) NULL;
Widget logo_l = (Widget) NULL;



void create_calc_shell (display, app_name, app_argc, app_argv)
Display *display;
char *app_name;
int app_argc;
char **app_argv;
{
	Widget children[16];      /* Children to manage */
	Arg al[64];                    /* Arg List */
	register int ac = 0;           /* Arg Count */
	XrmValue from_value, to_value; /* For resource conversion */
	XtPointer tmp_value;             /* ditto */

	XtSetArg(al[ac], XmNallowShellResize, TRUE); ac++;
	XtSetArg(al[ac], XmNargc, app_argc); ac++;
	XtSetArg(al[ac], XmNargv, app_argv); ac++;
	calc_shell = XtAppCreateShell(app_name, (char *) "MCalc", sessionShellWidgetClass, display, al, ac);

	ac = 0;
	XtSetArg(al[ac], XmNnavigationType, XmEXCLUSIVE_TAB_GROUP); ac++;
	XtSetArg(al[ac], XmNautoUnmanage, FALSE); ac++;
	XtSetArg(al[ac], XmNhorizontalSpacing, 5); ac++;
	XtSetArg(al[ac], XmNverticalSpacing, 5); ac++;
	calc_form = XmCreateForm ( calc_shell, (char *) "calc_form", al, ac );
	ac = 0;
	XtSetArg(al[ac], XmNnumColumns, 4); ac++;
	XtSetArg(al[ac], XmNpacking, XmPACK_COLUMN); ac++;
	XtSetArg(al[ac], XmNentryAlignment, XmALIGNMENT_CENTER); ac++;
	digits_rc = XmCreateRowColumn ( calc_form, (char *) "digits_rc", al, ac );
	ac = 0;
	digit7 = XmCreatePushButton ( digits_rc, (char *) "digit7", al, ac );
	digit4 = XmCreatePushButton ( digits_rc, (char *) "digit4", al, ac );
	digit1 = XmCreatePushButton ( digits_rc, (char *) "digit1", al, ac );
	dec_point = XmCreatePushButton ( digits_rc, (char *) "dec_point", al, ac );
	digit8 = XmCreatePushButton ( digits_rc, (char *) "digit8", al, ac );
	digit5 = XmCreatePushButton ( digits_rc, (char *) "digit5", al, ac );
	digit2 = XmCreatePushButton ( digits_rc, (char *) "digit2", al, ac );
	digit0 = XmCreatePushButton ( digits_rc, (char *) "digit0", al, ac );
	digit9 = XmCreatePushButton ( digits_rc, (char *) "digit9", al, ac );
	digit6 = XmCreatePushButton ( digits_rc, (char *) "digit6", al, ac );
	digit3 = XmCreatePushButton ( digits_rc, (char *) "digit3", al, ac );
	eq_b = XmCreatePushButton ( digits_rc, (char *) "eq_b", al, ac );
	add_b = XmCreatePushButton ( digits_rc, (char *) "add_b", al, ac );
	sub_b = XmCreatePushButton ( digits_rc, (char *) "sub_b", al, ac );
	mul_b = XmCreatePushButton ( digits_rc, (char *) "mul_b", al, ac );
	div_b = XmCreatePushButton ( digits_rc, (char *) "div_b", al, ac );
	XtSetArg(al[ac], XmNsensitive, FALSE); ac++;
	XtSetArg(al[ac], XmNmaxLength, 20); ac++;
	XtSetArg(al[ac], XmNcolumns, 20); ac++;
	XtSetArg(al[ac], XmNeditable, FALSE); ac++;
	XtSetArg(al[ac], XmNcursorPositionVisible, FALSE); ac++;
	calc_display = XmCreateText ( calc_form, (char *) "calc_display", al, ac );
	ac = 0;
	XtSetArg(al[ac], XmNnumColumns, 4); ac++;
	XtSetArg(al[ac], XmNorientation, XmHORIZONTAL); ac++;
	XtSetArg(al[ac], XmNpacking, XmPACK_COLUMN); ac++;
	XtSetArg(al[ac], XmNentryAlignment, XmALIGNMENT_CENTER); ac++;
	unary_rc = XmCreateRowColumn ( calc_form, (char *) "unary_rc", al, ac );
	ac = 0;
	sgn_b = XmCreatePushButton ( unary_rc, (char *) "sgn_b", al, ac );
	m_b = XmCreatePushButton ( unary_rc, (char *) "m_b", al, ac );
	if (DefaultDepthOfScreen(DefaultScreenOfDisplay(display)) != 1) {
		from_value.addr = "white" ;
		from_value.size = strlen( from_value.addr ) + 1;
		to_value.addr = NULL;
		XtConvertAndStore (unary_rc, XmRString, &from_value, XmRPixel, &to_value);
		if ( to_value.addr ) {
			XtSetArg(al[ac], XmNforeground, (*((Pixel*) to_value.addr))); ac++;
		}
	}
	if (DefaultDepthOfScreen(DefaultScreenOfDisplay(display)) != 1) {
		from_value.addr = "orange" ;
		from_value.size = strlen( from_value.addr ) + 1;
		to_value.addr = NULL;
		XtConvertAndStore (unary_rc, XmRString, &from_value, XmRPixel, &to_value);
		if ( to_value.addr ) {
			XtSetArg(al[ac], XmNbackground, (*((Pixel*) to_value.addr))); ac++;
		}
	}
	ac_b = XmCreatePushButton ( unary_rc, (char *) "ac_b", al, ac );
	ac = 0;
	mplus_b = XmCreatePushButton ( unary_rc, (char *) "mplus_b", al, ac );
	ce_b = XmCreatePushButton ( unary_rc, (char *) "ce_b", al, ac );
	mminus_b = XmCreatePushButton ( unary_rc, (char *) "mminus_b", al, ac );
	XtSetArg(al[ac], XmNlabelType, XmPIXMAP); ac++;
	logo_l = XmCreateLabel ( calc_form, (char *) "logo_l", al, ac );
	ac = 0;


	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNtopOffset, 10); ac++;
	XtSetArg(al[ac], XmNtopWidget, calc_display); ac++;
	XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNleftOffset, 1); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_NONE); ac++;
	XtSetValues ( digits_rc,al, ac );
	ac = 0;

	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetValues ( calc_display,al, ac );
	ac = 0;

	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNtopOffset, 10); ac++;
	XtSetArg(al[ac], XmNtopWidget, calc_display); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNleftOffset, 15); ac++;
	XtSetArg(al[ac], XmNleftWidget, digits_rc); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
	XtSetValues ( unary_rc,al, ac );
	ac = 0;

	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNtopOffset, 2); ac++;
	XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_NONE); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNleftOffset, 10); ac++;
	XtSetArg(al[ac], XmNleftWidget, calc_display); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_NONE); ac++;
	XtSetValues ( logo_l,al, ac );
	ac = 0;
	if (digit7)
		XtAddCallback( digit7, XmNactivateCallback, digit_callback, (char *)7 );
	if (digit4)
		XtAddCallback( digit4, XmNactivateCallback, digit_callback, (char *)4 );
	if (digit1)
		XtAddCallback( digit1, XmNactivateCallback, digit_callback, (char *)1 );
	if (dec_point)
		XtAddCallback( dec_point, XmNactivateCallback, decimal_point, (XtPointer) 0 );
	if (digit8)
		XtAddCallback( digit8, XmNactivateCallback, digit_callback, (char *)8 );
	if (digit5)
		XtAddCallback( digit5, XmNactivateCallback, digit_callback, (char *)5 );
	if (digit2)
		XtAddCallback( digit2, XmNactivateCallback, digit_callback, (char *)2 );
	if (digit0)
		XtAddCallback( digit0, XmNactivateCallback, digit_callback, (char *)0 );
	if (digit9)
		XtAddCallback( digit9, XmNactivateCallback, digit_callback, (char *)9 );
	if (digit6)
		XtAddCallback( digit6, XmNactivateCallback, digit_callback, (char*)6 );
	if (digit3)
		XtAddCallback( digit3, XmNactivateCallback, digit_callback, (char *)3 );
	if (eq_b)
		XtAddCallback( eq_b, XmNactivateCallback, Equals, (XtPointer) 0 );
	if (add_b)
		XtAddCallback( add_b, XmNactivateCallback, Add, (XtPointer) 0 );
	if (sub_b)
		XtAddCallback( sub_b, XmNactivateCallback, Subtract, (XtPointer) 0 );
	if (mul_b)
		XtAddCallback( mul_b, XmNactivateCallback, Multiply, (XtPointer) 0 );
	if (div_b)
		XtAddCallback( div_b, XmNactivateCallback, Divide, (XtPointer) 0 );
	if ((children[ac] = digit7) != (Widget) 0) { ac++; }
	if ((children[ac] = digit4) != (Widget) 0) { ac++; }
	if ((children[ac] = digit1) != (Widget) 0) { ac++; }
	if ((children[ac] = dec_point) != (Widget) 0) { ac++; }
	if ((children[ac] = digit8) != (Widget) 0) { ac++; }
	if ((children[ac] = digit5) != (Widget) 0) { ac++; }
	if ((children[ac] = digit2) != (Widget) 0) { ac++; }
	if ((children[ac] = digit0) != (Widget) 0) { ac++; }
	if ((children[ac] = digit9) != (Widget) 0) { ac++; }
	if ((children[ac] = digit6) != (Widget) 0) { ac++; }
	if ((children[ac] = digit3) != (Widget) 0) { ac++; }
	if ((children[ac] = eq_b) != (Widget) 0) { ac++; }
	if ((children[ac] = add_b) != (Widget) 0) { ac++; }
	if ((children[ac] = sub_b) != (Widget) 0) { ac++; }
	if ((children[ac] = mul_b) != (Widget) 0) { ac++; }
	if ((children[ac] = div_b) != (Widget) 0) { ac++; }
	if (ac > 0) { XtManageChildren(children, ac); }
	ac = 0;
	if (sgn_b)
		XtAddCallback( sgn_b, XmNactivateCallback, ChangeSign, (XtPointer) 0 );
	if (m_b)
		XtAddCallback( m_b, XmNactivateCallback, MemRecall, (XtPointer) 0 );
	if (ac_b)
		XtAddCallback( ac_b, XmNactivateCallback, ClearAll, (XtPointer) 0 );
	if (mplus_b)
		XtAddCallback( mplus_b, XmNactivateCallback, MemAdd, (XtPointer) 0 );
	if (ce_b)
		XtAddCallback( ce_b, XmNactivateCallback, ClearEntry, (XtPointer) 0 );
	if (mminus_b)
		XtAddCallback( mminus_b, XmNactivateCallback, MemSubtract, (XtPointer) 0 );
	if ((children[ac] = sgn_b) != (Widget) 0) { ac++; }
	if ((children[ac] = m_b) != (Widget) 0) { ac++; }
	if ((children[ac] = ac_b) != (Widget) 0) { ac++; }
	if ((children[ac] = mplus_b) != (Widget) 0) { ac++; }
	if ((children[ac] = ce_b) != (Widget) 0) { ac++; }
	if ((children[ac] = mminus_b) != (Widget) 0) { ac++; }
	if (ac > 0) { XtManageChildren(children, ac); }
	ac = 0;
	if ((children[ac] = digits_rc) != (Widget) 0) { ac++; }
	if ((children[ac] = calc_display) != (Widget) 0) { ac++; }
	if ((children[ac] = unary_rc) != (Widget) 0) { ac++; }
	if ((children[ac] = logo_l) != (Widget) 0) { ac++; }
	if (ac > 0) { XtManageChildren(children, ac); }
	ac = 0;
	if (calc_form != (Widget) 0) { XtManageChild ( calc_form); }
}

