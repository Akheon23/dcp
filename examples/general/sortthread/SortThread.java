/* Copyright 2002 Sun Microsystems, Inc.  All Rights Reserved
 *
 * SortThread.java
 *
 * This program is meant to be used to illustrate use of the
 * debugger for multi-threaded debugging. It is not meant as
 * an example of C coding or Swing programming.
 */

import java.lang.*;

public class SortThread extends javax.swing.JFrame {
    final static int bubblesort = 1;
    final static int binary_insertion_sort =2;
    final static int heapsort = 3;
    final static int quicksort = 4;
    final static int shakersort = 5;
    final static int straight_insertion_sort = 6;
    final static int straight_selection_sort = 7;
    
    public native void sort_proc();
    public native static void sort_num(int i);
    public native static void sort_reset();
    
    /** Creates new form SortThread */
    public SortThread() {
        super("SortThread");
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        getContentPane().setLayout(null);

        setTitle("SortThread");
        setForeground(java.awt.Color.lightGray);
        setBackground(java.awt.Color.gray);
        setFont(new java.awt.Font("", 0, 10));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jCheckBox1.setText("bubblesort");
        jCheckBox1.setBackground(new java.awt.Color(255, 255, 204));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(100, 20, 180, 25);

        jCheckBox2.setText("binary_insertion_sort");
        jCheckBox2.setBackground(new java.awt.Color(255, 255, 204));
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        getContentPane().add(jCheckBox2);
        jCheckBox2.setBounds(100, 60, 180, 25);

        jCheckBox3.setText("heapsort");
        jCheckBox3.setBackground(new java.awt.Color(255, 255, 204));
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        getContentPane().add(jCheckBox3);
        jCheckBox3.setBounds(100, 100, 180, 25);

        jCheckBox4.setText("quicksort");
        jCheckBox4.setBackground(new java.awt.Color(255, 255, 204));
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        getContentPane().add(jCheckBox4);
        jCheckBox4.setBounds(100, 140, 180, 25);

        jCheckBox5.setText("shakersort");
        jCheckBox5.setBackground(new java.awt.Color(255, 255, 204));
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        getContentPane().add(jCheckBox5);
        jCheckBox5.setBounds(100, 180, 180, 25);

        jCheckBox6.setText("straight_insertion_sort");
        jCheckBox6.setBackground(new java.awt.Color(255, 255, 204));
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        getContentPane().add(jCheckBox6);
        jCheckBox6.setBounds(100, 220, 180, 25);

        jCheckBox7.setText("straight_selection_sort");
        jCheckBox7.setBackground(new java.awt.Color(255, 255, 204));
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        getContentPane().add(jCheckBox7);
        jCheckBox7.setBounds(100, 260, 180, 25);

        jButton1.setText("Sort");
        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(40, 330, 59, 27);

        jButton2.setText("Quit");
        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(300, 330, 57, 27);

        jButton3.setText("Clear");
        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(170, 330, 65, 27);

        jSeparator1.setPreferredSize(new java.awt.Dimension(400, 100));
        jSeparator1.setMinimumSize(new java.awt.Dimension(8, 8));
        jSeparator1.setAlignmentY(0.0F);
        jSeparator1.setAlignmentX(0.0F);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 310, 370, 20);

        setBounds(100, 100, 400, 400);
    }//GEN-END:initComponents
        
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jCheckBox1.setSelected(false);
        jCheckBox1.setEnabled(true);
        jCheckBox2.setSelected(false);
        jCheckBox2.setEnabled(true);
        jCheckBox3.setSelected(false);
        jCheckBox3.setEnabled(true);
        jCheckBox4.setSelected(false);
        jCheckBox4.setEnabled(true);
        jCheckBox5.setSelected(false);
        jCheckBox5.setEnabled(true);
        jCheckBox6.setSelected(false);
        jCheckBox6.setEnabled(true);
        jCheckBox7.setSelected(false);
        jCheckBox7.setEnabled(true);
        sort_reset();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        sort_proc();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        if(jCheckBox7.isSelected()) {
            jCheckBox7.setEnabled(false);
            sort_num(straight_selection_sort);
        }
    }//GEN-LAST:event_jCheckBox7ActionPerformed
    
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        if(jCheckBox6.isSelected()) {
            jCheckBox6.setEnabled(false);
            sort_num(straight_insertion_sort);
        }
    }//GEN-LAST:event_jCheckBox6ActionPerformed
    
    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        if(jCheckBox5.isSelected()) {
            jCheckBox5.setEnabled(false);
            sort_num(shakersort);
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed
    
    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if(jCheckBox4.isSelected()) {
            jCheckBox4.setEnabled(false);
            sort_num(quicksort);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed
    
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if(jCheckBox3.isSelected()) {
            jCheckBox3.setEnabled(false);
            sort_num(heapsort);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed
    
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if(jCheckBox2.isSelected()) {
            jCheckBox2.setEnabled(false);
            sort_num(binary_insertion_sort);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()) {
            jCheckBox1.setEnabled(false);
            sort_num(bubblesort);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        new SortThread().show();
    }
    
    static {
        try {
            System.loadLibrary("SortThread");
        }
        catch ( UnsatisfiedLinkError ne ) {
            System.out.println("Error linking");
            throw ne;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
